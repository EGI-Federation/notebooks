---
proxy:
  secretToken: "{{ proxy_token }}"
  service:
    type: NodePort

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
  hosts: [{{nsupdate_host}}]
  tls:
  - hosts:
    - {{Â nsupdate_host }}
    secretName: acme-tls-notebooks
    enabled: true
    hosts: [{{nsupdate_host}}]

singleuser:
  extraEnv:
    XDG_DATA_HOME: "/persistent/.local"
  lifecycleHooks:
    postStart:
      exec: {"command": ["/bin/sh", "-c", "mkdir -p /persistent/.local && rm -rf $HOME/work && ln -s /persistent $HOME/persistent"]}
  storage:
    capacity: 1Gi
    homeMountPath: /persistent
    dynamic:
      storageClass: "managed-nfs-storage"
      pvcNameTemplate: claim-{userid}{servername}
      volumeNameTemplate: vol-{userid}{servername}
      storageAccessModes: ["ReadWriteMany"]
  memory:
    limit: 1G
    guarantee: 512M
  cpu:
    limit: 2
    guarantee: .02
  defaultUrl: "/lab"
  image:
    name: eginotebooks/single-user
    tag: 864e72c

hub:
  image:
    name: eginotebooks/hub
    tag: 4b0f91b
  db:
    pvc:
      annotations: {volume.beta.kubernetes.io/storage-class: "managed-nfs-storage"}
  extraConfig:
    enable-lab: |-
      c.KubeSpawner.cmd = ['jupyter-labhub']
    volume-handling: |-
      from egispawner.spawner import EGISpawner
      c.JupyterHub.spawner_class = EGISpawner

  extraEnv:
    JUPYTER_ENABLE_LAB: 1
    JUPYTERHUB_CRYPT_KEY: "{{ jupyter_crypt_key }}"
  services:
    status:
       url: "http://status-web.{{ namespace }}.svc.cluster.local/"
       admin: true
       api_token: "{{ monitor_token }}"

auth:
  type: custom
  admin:
    access: true
    users:
      - 529a87e5ce04cd5ddd7161734d02df0e2199a11452430803e714cb1309cc3907@egi.eu
      - 025166931789a0f57793a6092726c2ad89387a4cc167e7c63c5d85fc91021d18@egi.eu
      - 7ce47695f1e7fc91a1156e672f4a47576559938cdbe840355e2429e3a05b4ff8@egi.eu
  custom:
    className: oauthenticator.egicheckin.EGICheckinAuthenticator
    config:
      client_id: "{{ checkin_client_id }}"
      client_secret: "{{ checkin_client_secret }}"
      oauth_callback_url: "https://{{ nsupdate_host }}/hub/oauth_callback"
      enable_auth_state: true
      scope: ["openid", "profile", "email", "offline_access", "eduperson_scoped_affiliation", "eduperson_entitlement"]
