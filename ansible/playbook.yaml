---
- hosts: all
  gather_facts: false
  become: true
  tasks:
  - name: Install python 2
    raw: |-
      test -e /usr/bin/python ||
        (apt -y update && apt install -y python-minimal)

- hosts: all
  become: true
  tasks:
    - name: Upgrade all packages
      apt:
        upgrade: dist
        update_cache: true

- hosts: all
  become: true
  tasks:
    - name: Create /etc/docker directory
      file:
        path: /etc/docker
        state: directory
    - name: Force overlay2 in docker
      template:
        src: templates/daemon.json
        dest: /etc/docker/daemon.json
        mode: 0644
    - name: Install nfs-common
      apt: name="nfs-common" state=present update_cache=yes

- hosts: front
  become: true
  tasks:
    - name: Install nfs-server
      apt: name="nfs-kernel-server" state=present update_cache=yes
    - name: Create user for NFS
      user:
        name: volumes
        create_home: false
        uid: 5005
    - name: Create /exports dir
      file:
        path: /exports
        state: directory
        mode: 0755
        owner: volumes
    - name: Create exports
      template:
        src: templates/exports
        dest: /etc/exports
        mode: 0644
    - name: Start NFS service
      service: name="nfs-server" state=started
    - name: Reload exports
      command: exportfs -ra

- hosts: front
  tags:
    - post
  become: true
  roles:
    - role: 'grycap.kubernetes'
      vars:
        kube_network: 'weave'

- hosts: wn
  become: true
  roles:
    - role: 'grycap.kubernetes'
      vars:
        kube_type_of_node: 'wn'
        kube_server: '{{ front_ip }}'
        # what if we want to add this to the master too?
        kubelet_extra_args: '--volume-stats-agg-period 0'

- hosts: front
  become: true
  tasks:
    - name: Create NFS yaml
      template:
        src: templates/nfs.yml
        dest: /tmp/nfs.yml
    - name: Apply NFS configuration
      command: |-
        kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f /tmp/nfs.yml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Set NFS as default PVC
      command: |-
        kubectl patch storageclass managed-nfs-storage
          -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Create ingress config file
      template:
        src: templates/ingress.yaml
        dest: /tmp/ingress.yaml
        mode: 0644
    - name: Create ingress
      command: |-
        helm install -f /tmp/ingress.yaml --namespace kube-system
          --name cluster-ingress stable/nginx-ingress
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Install cert-manager CRDs
      command: |-
        kubectl apply -f
          https://raw.githubusercontent.com/jetstack/cert-manager/release-0.6/deploy/manifests/00-crds.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Install cert-manager
      command: |-
        helm install --set ingressShim.defaultIssuerName=letsencrypt-prod
          --set ingressShim.defaultIssuerKind=ClusterIssuer
          --version v0.6.0
          --name cert-manager --namespace cert-manager stable/cert-manager
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Create certificate issuer configuration
      template:
        src: templates/clusterissuer.yaml
        dest: /tmp/clusterissuer.yaml
        mode: 0644
    - name: Create certificate issuer
      command: kubectl apply -f /tmp/clusterissuer.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

- hosts: front
  become: true
  tasks:
    - name: Register DNS name
      uri:
        url: https://nsupdate.fedcloud.eu/nic/update?myip={{ nsupdate_ip }}
        user: "{{ nsupdate_host }}"
        password: "{{ nsupdate_passwd }}"
        validate_certs: false
    - name: Install jupyterhub helm charts
      command: helm repo add jupyterhub https://jupyterhub.github.io/helm-chart/
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Install egi-notebooks helm charts
      command: helm repo add egi-notebooks https://enolfc.github.io/helm-charts/
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Update jupyter helm chart
      command: helm repo update
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Create config file for jupyter
      template:
        src: templates/notebooks.yaml
        dest: /tmp/notebooks.yaml
        mode: 0644
    - name: Create config file for jupyter monitor
      template:
        src: templates/monitor.yaml
        dest: /tmp/monitor.yaml
        mode: 0644
    - name: Install jupyterhub
      command: |-
        helm install jupyterhub/jupyterhub --version=0.7-a3fab36
          --name=hub --namespace="{{ namespace }}" -f /tmp/notebooks.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
    - name: Install monitor
      command: |-
        helm install egi-notebooks/notebook-monitor --version=0.1.0
          --name=monitor --namespace="{{ namespace }}" -f /tmp/monitor.yaml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
